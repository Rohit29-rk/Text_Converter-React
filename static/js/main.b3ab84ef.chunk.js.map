{"version":3,"sources":["components/logok.jpg","components/Navbar.js","components/Text.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","src","lojo","alt","height","width","type","id","href","homepage","onClick","toggle","role","htmlFor","Text","useState","text","setText","style","color","heading","onChange","event","target","value","placeholder","backgroundColor","name","rows","disabled","length","newtext","toUpperCase","salert","toLowerCase","window","speechSynthesis","speak","SpeechSynthesisUtterance","split","map","s","charAt","substring","join","navigator","clipboard","writeText","filter","element","Alert","alert","msg","defaultProps","App","setAlert","message","setTimeout","setMode","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b3ab84ef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logok.1c7d0f77.jpg\";","import React from 'react'\r\nimport lojo from './logok.jpg'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg  navbar-${props.mode} bg-${props.mode}`}>\r\n\r\n      <img src={lojo} className=\"logo\" alt=\"logo\" height=\"70px\" width=\"70px\"></img>\r\n\r\n\r\n      <button className=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n        <span className=\"toggler-icon top-bar\"></span>\r\n        <span className=\"toggler-icon middle-bar\"></span>\r\n        <span className=\"toggler-icon bottom-bar\"></span>\r\n      </button>\r\n\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#\">{props.homepage}</a>\r\n          </li>\r\n\r\n        </ul>\r\n        \r\n\r\n        <div className={`d-flex form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n        <input className=\"form-check-input  \" onClick={props.toggle} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n        <label className=\"form-check-label \" id=\"dmode\"  htmlFor=\"flexSwitchCheckDefault\">Enabled {props.mode === 'light' ? 'dark' : 'light'} mode</label>\r\n      </div>\r\n      </div>\r\n\r\n    </nav>\r\n  )\r\n}\r\n//here we fixed proptype as string\r\nNavbar.propTypes = { homepage: PropTypes.string }\r\n\r\n//here we give default prop if we are not given in app.js\r\nNavbar.defaultProps = {\r\n  homepage: 'ro'\r\n}\r\n","import React, { useState } from 'react'\r\n\r\n\r\nexport default function Text(props) {\r\n    const uppercase = () => {\r\n        \r\n        let newtext = text.toUpperCase(text);\r\n        setText(newtext);\r\n        props.salert(\"Converted to Uppercase!\");\r\n    }\r\n    const lowercase = () => {\r\n\r\n        let newtext = text.toLowerCase(text);\r\n        setText(newtext);\r\n        props.salert(\"Converted to Lowercase!\");\r\n    }\r\n    const copy = () => {\r\n        navigator.clipboard.writeText(text);\r\n        props.salert(\"Copied to clipboard!\");\r\n    }\r\n    const speech = () => {\r\n\r\n        window.speechSynthesis.speak(new SpeechSynthesisUtterance(text));\r\n    }\r\n    const capi = () => {\r\n\r\n        let newtext = text.toLowerCase().split(' ').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');;\r\n        setText(newtext);\r\n        props.salert(\"First letter has been Capitalized!\");\r\n    }\r\n    const extra = () => {\r\n        let newtext = text.split(/[ ]+/);\r\n        setText(newtext.join(\" \"));\r\n        props.salert(\"Extra space has been removed!\");\r\n    }\r\n    const clear = () => {\r\n        setText('');\r\n        \r\n\r\n    }\r\n    const onchanger = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n            <div style={{color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"form-group\" >\r\n                    <textarea id=\"message\" className=\"form-control\" onChange={onchanger} placeholder=\"Enter Text here\" style={{backgroundColor: props.mode === 'dark' ? '#0f131b' : 'white',color: props.mode === 'dark' ? 'white' : 'black'}} name=\"message\" value={text}\r\n                        rows=\"8\"></textarea>\r\n                </div>\r\n                <button disabled={text.length===0} className=\"btn btn-primary\" onClick={uppercase}>Change to Uppercase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary\" onClick={lowercase}>Change to Lowecase</button>\r\n                \r\n                <button disabled={text.length===0} className=\"btn btn-primary\" onClick={speech}>Convert Text to Speech</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary\" onClick={capi}>Capitalize first Letter</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary\" onClick={extra}>Remove Extra Space</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary\" onClick={copy}>Copy Text</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary\" onClick={clear}>Clear Text</button>\r\n\r\n            </div>\r\n            <div className=\"container my-2\" id=\"sum\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h2>Text Summary</h2>\r\n                <p>Text has <b><u>{text.split(/\\s/).filter((element)=> {return element.length!==0}).length}</u></b> words and <b><u>{text.length}</u></b>character</p>\r\n                <p>It Takes <b><u>{0.008 * text.split(' ').filter((element)=> {return element.length!==0}).length}</u></b> minutes to read</p>\r\n            </div>\r\n            <div className=\"container\" style={{color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h2>Preview</h2>\r\n                <p>{text.length > 0 ? text : \"Enter  Something in the textbox above to preview it here\"} </p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n            {props.alert &&<div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n            <strong>{props.alert.msg}</strong> \r\n            \r\n        </div>}\r\n        </div>\r\n\r\n        \r\n\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport Text from './components/Text';\nimport React,{useState} from 'react'\nimport Alert from './components/Alert';\n\n\n\n\n// here prop is use from navbar components\nfunction App() {\n  const [alert, setAlert] = useState(null);\n  const salert= (message)=>{\n    setAlert({\n      msg: message\n\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },2000);\n  }\n  \n  const [mode, setMode] = useState('light');\n  const toggle = () =>{\n    if (mode ==='light') {\n      setMode('dark');\n      document.body.style.backgroundColor ='#0f131b';\n      salert(\"Dark mode has been Enabled\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor ='white';\n      salert(\"Light mode has been Enabled\");\n\n    }\n  }\n  return (\n    <>\n    <Navbar homepage=\"Home\" mode={mode} toggle={toggle}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n      <Text heading='Enter Text Here' mode={mode} salert={salert}/>\n    </div>\n    \n      \n      \n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}